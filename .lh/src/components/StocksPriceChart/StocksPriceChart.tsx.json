{
    "sourceFile": "src/components/StocksPriceChart/StocksPriceChart.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1717855225465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717855839939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,16 @@\n     series: chartData,\n   } satisfies Highcharts.Options;\n \n   const isError = queries.some((query) => query.isError);\n+  const isLoading = queries.some((query)=> query.isLoading);\n \n+  if (isLoading) {\n+    return <div>\n+      \n+    </div>\n+  }\n+\n   if (isError)\n     return (\n       <div className=\"h-[400px] text-center text-muted-foreground\">\n         Error loading data\n"
                },
                {
                    "date": 1717855853077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,14 +49,20 @@\n     series: chartData,\n   } satisfies Highcharts.Options;\n \n   const isError = queries.some((query) => query.isError);\n-  const isLoading = queries.some((query)=> query.isLoading);\n+  const isLoading = queries.some((query) => query.isLoading);\n \n   if (isLoading) {\n-    return <div>\n-      \n-    </div>\n+    return (\n+      <div className=\"flex items-center space-x-4\">\n+        <Skeleton className=\"size-12 rounded-full\" />\n+        <div className=\"space-y-2\">\n+          <Skeleton className=\"h-4 w-[250px]\" />\n+          <Skeleton className=\"h-4 w-[200px]\" />\n+        </div>\n+      </div>\n+    );\n   }\n \n   if (isError)\n     return (\n"
                },
                {
                    "date": 1717855866126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import HighchartsReact from 'highcharts-react-official';\n import useStockPriceChartQuery from './StocksPriceChart.hooks';\n import { capitalize } from '@/lib/utils';\n import { StockPriceType } from '@/types';\n+import { Skeleton } from '@/lib/components/Skeleton';\n interface StockPriceChartProps {\n   selectedTickers: string[];\n   dateRange: { start: string; end: string };\n   priceType: StockPriceType;\n@@ -53,9 +54,9 @@\n   const isLoading = queries.some((query) => query.isLoading);\n \n   if (isLoading) {\n     return (\n-      <div className=\"flex items-center space-x-4\">\n+      <div className=\"flex items-center justify-center space-x-4\">\n         <Skeleton className=\"size-12 rounded-full\" />\n         <div className=\"space-y-2\">\n           <Skeleton className=\"h-4 w-[250px]\" />\n           <Skeleton className=\"h-4 w-[200px]\" />\n"
                },
                {
                    "date": 1717855888737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,15 @@\n   const isLoading = queries.some((query) => query.isLoading);\n \n   if (isLoading) {\n     return (\n-      <div className=\"flex items-center justify-center space-x-4\">\n+      <div\n+        className={`\n+        h:[400px]\n+\n+        flex items-center justify-center space-x-4\n+      `}\n+      >\n         <Skeleton className=\"size-12 rounded-full\" />\n         <div className=\"space-y-2\">\n           <Skeleton className=\"h-4 w-[250px]\" />\n           <Skeleton className=\"h-4 w-[200px]\" />\n"
                },
                {
                    "date": 1717855935656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,12 +56,12 @@\n   if (isLoading) {\n     return (\n       <div\n         className={`\n-        h:[400px]\n+          flex\n \n-        flex items-center justify-center space-x-4\n-      `}\n+          h-[400px] items-center justify-center space-x-4\n+        `}\n       >\n         <Skeleton className=\"size-12 rounded-full\" />\n         <div className=\"space-y-2\">\n           <Skeleton className=\"h-4 w-[250px]\" />\n"
                },
                {
                    "date": 1717856860916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import Highcharts from 'highcharts';\n import HighchartsReact from 'highcharts-react-official';\n import useStockPriceChartQuery from './StocksPriceChart.hooks';\n import { capitalize } from '@/lib/utils';\n-import { StockPriceType } from '@/types';\n+import { StockPriceType } from '../PriceTypePicker/PriceTypePicker.types';\n import { Skeleton } from '@/lib/components/Skeleton';\n interface StockPriceChartProps {\n   selectedTickers: string[];\n   dateRange: { start: string; end: string };\n"
                }
            ],
            "date": 1717855225465,
            "name": "Commit-0",
            "content": "import Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport useStockPriceChartQuery from './StocksPriceChart.hooks';\nimport { capitalize } from '@/lib/utils';\nimport { StockPriceType } from '@/types';\ninterface StockPriceChartProps {\n  selectedTickers: string[];\n  dateRange: { start: string; end: string };\n  priceType: StockPriceType;\n}\n\nfunction StockPriceChart({\n  selectedTickers,\n  dateRange,\n  priceType,\n}: StockPriceChartProps) {\n  const queries = useStockPriceChartQuery(\n    selectedTickers,\n    dateRange,\n    priceType,\n  );\n\n  const chartData = selectedTickers.map((ticker) => {\n    const query = queries.find((q) => q?.data?.[0]?.ticker === ticker);\n    return {\n      type: 'line' as const,\n      name: ticker,\n      data: query?.data?.map((point) => ({ x: point.x, y: point.y })) ?? [],\n    };\n  });\n\n  const chartOptions = {\n    chart: {\n      zooming: {\n        type: 'x',\n      },\n    },\n    title: { text: 'Stock Prices' },\n    subtitle: {\n      text: 'Click and drag in the plot area to zoom in',\n    },\n    xAxis: { type: 'datetime' },\n    yAxis: {\n      title: {\n        text: `${capitalize(priceType)} Price`,\n      },\n    },\n    legend: { enabled: true },\n    series: chartData,\n  } satisfies Highcharts.Options;\n\n  const isError = queries.some((query) => query.isError);\n\n  if (isError)\n    return (\n      <div className=\"h-[400px] text-center text-muted-foreground\">\n        Error loading data\n      </div>\n    );\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n}\n\nexport default StockPriceChart;\n"
        }
    ]
}