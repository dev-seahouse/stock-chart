{
    "sourceFile": "src/lib/components/ui/Button.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1717755930513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717756039233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,56 @@\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n+import * as React from 'react';\n+import { Slot } from '@radix-ui/react-slot';\n+import { cva, type VariantProps } from 'class-variance-authority';\n \n-import { cn } from \"@/lib/utils\"\n+import { cn } from '@/lib/utils';\n \n const buttonVariants = cva(\n-  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n+  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n   {\n     variants: {\n       variant: {\n-        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n+        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n         destructive:\n-          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n+          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n         outline:\n-          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n+          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n         secondary:\n-          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n-        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n-        link: \"text-primary underline-offset-4 hover:underline\",\n+          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n+        ghost: 'hover:bg-accent hover:text-accent-foreground',\n+        link: 'text-primary underline-offset-4 hover:underline',\n       },\n       size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n+        default: 'h-10 px-4 py-2',\n+        sm: 'h-9 rounded-md px-3',\n+        lg: 'h-11 rounded-md px-8',\n+        icon: 'h-10 w-10',\n       },\n     },\n     defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n+      variant: 'default',\n+      size: 'default',\n     },\n-  }\n-)\n+  },\n+);\n \n export interface ButtonProps\n   extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n     VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n+  asChild?: boolean;\n }\n \n const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n   ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n+    const Comp = asChild ? Slot : 'button';\n     return (\n       <Comp\n         className={cn(buttonVariants({ variant, size, className }))}\n         ref={ref}\n         {...props}\n       />\n-    )\n-  }\n-)\n-Button.displayName = \"Button\"\n+    );\n+  },\n+);\n+Button.displayName = 'Button';\n \n-export { Button, buttonVariants }\n+export { Button, buttonVariants };\n"
                },
                {
                    "date": 1717756044952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,27 +4,52 @@\n \n import { cn } from '@/lib/utils';\n \n const buttonVariants = cva(\n-  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n+  `\n+    inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm\n+    font-medium ring-offset-background transition-colors\n+\n+    focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring\n+    focus-visible:ring-offset-2\n+\n+    disabled:pointer-events-none disabled:opacity-50\n+  `,\n   {\n     variants: {\n       variant: {\n-        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n-        destructive:\n-          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n-        outline:\n-          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n-        secondary:\n-          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n+        default: `\n+          bg-primary text-primary-foreground\n+\n+          hover:bg-primary/90\n+        `,\n+        destructive: `\n+            bg-destructive text-destructive-foreground\n+\n+            hover:bg-destructive/90\n+          `,\n+        outline: `\n+            border border-input bg-background\n+\n+            hover:bg-accent hover:text-accent-foreground\n+          `,\n+        secondary: `\n+            bg-secondary text-secondary-foreground\n+\n+            hover:bg-secondary/80\n+          `,\n         ghost: 'hover:bg-accent hover:text-accent-foreground',\n-        link: 'text-primary underline-offset-4 hover:underline',\n+        link: `\n+          text-primary underline-offset-4\n+\n+          hover:underline\n+        `,\n       },\n       size: {\n         default: 'h-10 px-4 py-2',\n         sm: 'h-9 rounded-md px-3',\n         lg: 'h-11 rounded-md px-8',\n-        icon: 'h-10 w-10',\n+        icon: 'size-10',\n       },\n     },\n     defaultVariants: {\n       variant: 'default',\n"
                }
            ],
            "date": 1717755930513,
            "name": "Commit-0",
            "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
        }
    ]
}